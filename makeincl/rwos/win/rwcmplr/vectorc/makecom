########################
# These are for VectorC
########################

CFLAGS += -Zl

CFLAGS += -nologo -W3 -DWIN32 -D_WINDOWS -D_MBCS -D__MSC__ \
	-DVC_EXTRALEAN  -DWIN32_EXTRA_LEAN -DWIN32_LEAN_AND_MEAN -c

LFLAGS += -VERBOSE:LIB -WARN:3 -align:0x1000

ifeq ($(SMALLCODE), 1)
C_SHARED = -MD
C_OPT = -O1 -Ob2
else
C_SHARED = -ML
C_OPT = -O2 -Ob2
endif

ifeq ($(COPTIMIZE), 0)
ifeq ($(CPROFILE), 0)
ifeq ($(MSWST), 0)
CFLAGS += -Ob0 -Oy- -Od
endif
else
# Inlining confuses VTune profiling; turn it off with -Ob0
CFLAGS += -Ob0gity -Gfys
endif
else
CFLAGS += $(C_OPT)
endif

# vectorc does not understand /U Visual C/C++ option
# /U<name> remove predefined macro

# Do not build with -GZ since not all x86 runtimes support __chkesp

ifeq ($(CDEBUG), 1)
CFLAGS += -Zi -D_DEBUG $(C_SHARED)d \
	  -Fd$(subst .$(LIBEXT),.pdb,$(TARGETLIB))
LFLAGS += -debug
else
ifeq ($(CPROFILE), 1)
CFLAGS += -Zi -DNDEBUG $(C_SHARED) \
	  -Fd$(subst .$(LIBEXT),.pdb,$(TARGETLIB))
LFLAGS += -debug -fixed:no
else
ifeq ($(MSWST), 1)
CFLAGS += -DNDEBUG -GX -Gh -Gs -O2 -Ob1 -Oity -Zi
LFLAGS += -PDB:none -debug:full -debugtype:cv wst.lib
else
CFLAGS += -DNDEBUG $(C_SHARED)
endif
endif
endif

ifeq ($(NOASM), 1)
CFLAGS += -DNOASM
endif

ifeq ("$(COMPILER)", "")
COMPILER=vectorc.exe -noprogress -vc 
endif

ifeq ("$(LINKER)", "")
# It should be this, but we have a rather strange idea of LINKER
LINKER=link.exe
endif

CC        = $(COMPILER)

# vectorc does not understand /EP Visual C/C++ option
# /EP preprocess to stdout, no #line
CPP := cl

# vectorc does not seem to want to generate assembly files with
# /Fa[file] name assembly listing file
CC_ASM := cl

COUT      = -Fo
LOUT      = -Fe
SOUT      = -c -Fa$(@F)
CPPOPT    = -EP

AS        = ml
AOUT      = -nologo -Fo
ASFLAGS   = -I$(BASEDIR)/driver/common			\
	    -I$(BASEDIR)/makeincl/rwos/$(RWOS)/masm	\
	    -I$(SRCDIR)					\
	    -I$(DEVDIR)/$(RWTARGET)			\
	    -c						\
	    -W2						\
	    -Cp						\
	    -Zm						\
	    -DBCC					\
	    -DSTACK					\
	    -coff

ifeq ("$(RWSW15)", "1")
ASFLAGS  += -DFB1555
endif

# Librarian options (for append, we include the source lib again)
AR		= lib.exe
ARCREATEFLAGS   = -out:$@ $^
ARAPPENDFLAGS	= -out:$@ $@

# How to run programs (no need for shell/simulator)
RUNIT		=

# We do want assembler
ifeq ("$(NOASM)", "")
NOASM = 0
endif
